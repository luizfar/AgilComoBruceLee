1.

Ágil como Bruce Lee

João Vortmann jvortmann@thoughtworks.com
Luiz Ribeiro  perdido@thoughtworks.com
<data>

2.

Agenda

3.

O que é ser ágil?

4.

Usar Scrum? XP?
Reuniões diárias? (1)
TDD? (2, 4)
Integração contínua? (1, 2, 4)
Show-cases? (3)
Programação em pares? (1, 2)
Iterações? (1, 2, 3, 4)
Retrospectiva? (

5.

NÃO

6.

...necessariamente....

7.

Por que?

8.

Antes.... um outro 'por que':
Por que utilizamos essas práticas?

9.

Por que stand-ups?
- compartilhar informações relevantes
- auxiliar na identificação de problemas/impedimentos
- levantar pontos em que algum integrante pode ajudar o outro

Incentivar:
- Colaboração entre os indivíduos
(falar sobre experiencias)

10.

Por que TDD?
- testes servem como verificação de requisitos
- garante que após uma modificação, outros requisitos não são afetados
- consequentemente, facilitam mudanças de requisitos
- testes servem como documentação do projeto (le o teste pra entender o codigo/documentacao sempre atualizada)

Incentivar:
- Feedback curto (quebra, fixa, e já sabe que tá funfando)
- Qualidade do código (ou seja, do produto)

11.

Por que integração contínua?
- para informar rapidamente o time caso algo de errado (facilitando a sua resolução)
- facilitar a manunteção do código em um estado saudável
(falar de experiencias com colaboracao + ci - times distribuidos)

Incentivar:
- Feedback curto
- Colaboração
- Qualidade do código

Por que show-cases?
- Verificar quão alinhado o estado do produto está com o idealizado pelo cliente
- Direcionar o andamento futuro do desenvolvimento com a necessidade do cliente

Incentivar:
- Feedback curto
- Colaboração com o cliente



Colaboração entre os indivíduos:
Individuals and interactions over processes and tools

Colaboração com o cliente:
Customer collaboration over contract negotiation

Qualidade do código:
Valor do produto:
Working software over comprehensive documentation

Feedback curto:
Responding to change over following a plan


12.

Por que iteraçoes?
- ciclo de feedback curto
- alinhar o real objetivo do software utilizando o conhecimento adquirido durante o desenvolvimento
- ter algo entregavel em espacos definidos de tempo

Incentivar:
- Entrega de valor com frequencia (constante geralmente) / Ter software funcionando em intervalos constantes?
- Colaboracao com o cliente
- Responder a mudanca de ideias com mais rapidez

13.

Por que retrospectiva?
- analisar o andamento do desenvolvimento
- corrigir alguma decisao incorreta
- reforcar decisoes corretas

Incentivar:
- Qualidade do desenvolvimento
- Adaptar o processo para o melhor resultado possivel

14.

Apenas aplicando estas tecnicas te fazem agil?
Nao?
Por que?

15.

Apenas aplicar as tecnicas garantem sucesso?

16.

Práticas dependem do time, do projeto, do ambiente.
(experiencias)
- falar como eh um projeto agil
- por que um projeto da NASA nao faz sentido ser agil
- por que um projeto de consultoria faz mais sentido ser agil
- o que agil nesse contexto (acho que isso pode ficar mais pro fim, quem sabe)

17.

Paralelo com metodologias tradicionais.
[quem sabe colocar essa parte antes?]

18.

Como saber quando aplicar essas praticas?
Quando mudar as praticas?
!Entendendo as ideias.!

19.

E X E M P L O S

20.

I D E I A S
Entrega de valor com frequencia: (e em menos tempo) | Time to market | $$

- usando iteracoes com um tempo definido e que faca sentido para a estrutura do projeto
  eh possivel entregar valor ao cliente de forma constante, reduzindo o time to market
  e monetizando a aplicacao sem a necessidade dela contar todos os features previamente
  pensados

Comunicacao:
- com programacao em par tens a vantagem de code review on the fly, dois desenvolvedores
  com background diferentes e com approaches diferentes, o que beneficia uma solucao
  diferenciada geralmente
- um ambiente aberto propicia a comunicacao entre diferentes partes do time de 
  desenvolvimento, facilitando a resolucao de bloqueios (ai inclue-se as stand-ups)
  e o compartilhamento de conhecimento sobre tecnologias, dominio da aplicacao ou 
  ate sobre uma solucao de para um problema recorrente

Colaboracao:
Atividade Intelectual e criativa:
Qualidade:
Processo adaptativo:
Feedback curto | Change change change



Falar da técnica e alinhar com um dos itens do manifesto.

Puxar ideias do manifesto a partir de práticas e detalhá-las.


Uma vez as ideias in place, times podem mudar as práticas.

Adaptação + ideias

Be water, my friend.
